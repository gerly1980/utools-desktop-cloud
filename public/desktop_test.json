{"data": "<!--\n * @Author: xkloveme\n * @Date: 2021-07-28 11:37:29\n * @LastEditTime: 2021-07-28 11:48:37\n * @LastEditors: xkloveme\n * @Description: \n * @FilePath: /utools-desktop-cloud/blog/test.md\n * @Copyright \u00a9 xkloveme\n-->\n\n# markdown-it-vue\n\n\n<iframe \n    width=\"100%\" \n    height=\"450\" \n    src=\"http://cdn.video.picasso.dandanjiang.tv/59f04f0de7bce72261c2aae8.mp4?newver=0.264477607069&sign=6733aecdb9c8f1f63a04e2d41b43e254&t=6100ef20\"\n    frameborder=\"0\" \n    allowfullscreen>\n</iframe>\n\n## Image size and Viewer\n\n![gvf](http://www.aqcoder.com/gvf-project.png =x50)\n![ravenq](http://www.aqcoder.com/ravenq-qr.png =50x50)\n\n## GitHub Table of Contents\n\n[toc]\n\nNote: Only `h2` and `h3` are shown in toc.\n\n## alter\n\nMarkup is similar to fenced code blocks. Valid container types are `success`, `info`, `warning` and `error`.\n\n::: success\nYou have got it.\n:::\n\n::: info\nYou have new mail.\n:::\n\n::: warning\nYou have new mail.\n:::\n\n::: error\nStaying up all night is bad for health.\n:::\n\n## mermaid charts\n\n### mermaid Flowchart\n\n[Flowchart Syntax](http://knsv.github.io/mermaid/#flowcharts-basic-syntax)\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n```\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n\n## Definition list\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n[Definition List Syntax](http://pandoc.org/README.html#definition-lists)\n\n\n## AsciiMath\n\nInline AsciiMath: `@(1/2[1-(1/2)^n])/(1-(1/2))=s_n@`\n\n```AsciiMath\noint_Cx^3 dx+4y^2 dy\n\n2=(((3-x)xx2)/(3-x))\n\nsum_(m=1)^oosum_(n=1)^oo(m^2 n)/(3^m(m3^n+n3^m)\n```\n\n```ASCIIMath\nphi_n(kappa) = 1/(4pi^2 kappa^2)\n int_0^oo (sin(kappa R))/(kappa R)\n del/(del R)\n[R^2 (del D_n (R))/(del R)] del R\n```\n\n[AsciiMath Documentation](http://asciimath.org/)\n\n## Subscript: H~2~O\n\nYou can also use inline math: `$H_2O$`\n\n\n## Superscript: 29^th^\n\nYou can also use inline math: `$29^{th}$`\n\n\n## Emoji: :panda_face: :sparkles: :camel: :boom: :pig:\n\n[Emoji Cheat Sheet](http://www.emoji-cheat-sheet.com/)\n\n## Fontawesome: :fa-car: :fa-flag: :fa-bicycle: :fa-leaf: :fa-heart:\n\n[All the Font Awesome icons](http://fontawesome.io/icons/)\n\n## Echarts\n\n[Documentation for Echarts](http://echarts.baidu.com)\n\nThe width and height is the size for chart container.\n\n```echarts\n{\n  \"width\": 500,\n  \"height\": 400,\n  \"series\": [\n    {\n      \"name\": \"\u8bbf\u95ee\u6765\u6e90\",\n      \"type\": \"pie\",\n      \"radius\": \"55%\",\n      \"data\": [\n        {\n          \"value\": 235,\n          \"name\": \"\u89c6\u9891\u5e7f\u544a\"\n        },\n        {\n          \"value\": 274,\n          \"name\": \"\u8054\u76df\u5e7f\u544a\"\n        },\n        {\n          \"value\": 310,\n          \"name\": \"\u90ae\u4ef6\u8425\u9500\"\n        },\n        {\n          \"value\": 335,\n          \"name\": \"\u76f4\u63a5\u8bbf\u95ee\"\n        },\n        {\n          \"value\": 400,\n          \"name\": \"\u641c\u7d22\u5f15\u64ce\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n## code\n\n### c\n```c\n#include <stdio.h>\nint main(int argc char* argv[]) {\n  printf(\"Hello, World!\");\n  return 0;\n}\n```\n\n### json\n\n```json\n{\n  \"name\": \"markdown-it-vue\"\n}\n```\n\n### javascript\n```json\nimport MarkdownItVue from 'markdown-it-vue'\nexport default {\n  components: {\n    MarkdownItVue\n  }\n}\n```\n\n### bash\n```bash\nnpm install markdown-it-vue\n```\n\n## table\n\n| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n\n## flowchart.js\n\n```flowchart.js\nst=>start: Start|past:>http://www.google.com[blank]\ne=>end: End:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|request\npara=>parallel: parallel tasks\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->para\nc2(true)->io->e\nc2(false)->e\n\npara(path1, bottom)->sub1(left)->op1\npara(path2, right)->op2->e\n\nst@>op1({\"stroke\":\"Red\"})@>cond({\"stroke\":\"Red\",\"stroke-width\":6,\"arrow-end\":\"classic-wide-long\"})@>c2({\"stroke\":\"Red\"})@>op2({\"stroke\":\"Red\"})@>e({\"stroke\":\"Red\"})\n```\n"}